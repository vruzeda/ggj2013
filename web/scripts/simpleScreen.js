// Generated by CoffeeScript 1.4.0
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(["kinetic", "framework/screen"], function(Kinetic, Screen) {
    var SimpleScreen;
    SimpleScreen = (function(_super) {

      __extends(SimpleScreen, _super);

      function SimpleScreen() {
        this.onRectClick = __bind(this.onRectClick, this);
        return SimpleScreen.__super__.constructor.apply(this, arguments);
      }

      SimpleScreen.prototype._constructLayout = function() {
        var rect;
        rect = new Kinetic.Rect({
          width: 100,
          height: 100,
          fill: "green",
          stroke: "black",
          strokeWidth: 4
        });
        this.registerOnClickListener(rect, this.onRectClick);
        return this._layer.add(rect);
      };

      SimpleScreen.prototype.onRectClick = function(rect) {
        rect.setX(Math.floor(Math.random() * this.getWidth()));
        rect.setY(Math.floor(Math.random() * this.getHeight()));
        return this.redraw();
      };

      return SimpleScreen;

    })(Screen);
    return SimpleScreen;
  });

}).call(this);
